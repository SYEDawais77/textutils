{"ast":null,"code":"import _slicedToArray from\"C:/FullStackWebDevelopment/textutils/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function TextForm(props){var handleClear=function handleClear(){setText(\"\");setUniqueEmails(\"\");setStyle1('none');};var HanldetoUpper=function HanldetoUpper(){var newText=text.toUpperCase();setText(newText);setStyle1('none');};var HandletoLower=function HandletoLower(){var newText=text.toLowerCase();setText(newText);setStyle1('none');};var onChangeText=function onChangeText(event){setText(event.target.value);setStyle1('none');};function countWords(){var splitedTextLenght=text.split(' ').length;if(text.endsWith(' ')){return splitedTextLenght=splitedTextLenght-1;}else{return text.split(' ').length;}}var extractEmails=function extractEmails(text){var emailRegex=/[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/g;var emails=text.match(emailRegex)||[];return emails;};var handleEmailExtractor=function handleEmailExtractor(){var emails=extractEmails(text);if(document.getElementById('textArea').value===''){props.showAlert(\"Please enter some text in the Text Area.\",'info');}else if(emails.length>0){setStyle1('inline');var _emails=extractEmails(text);setUniqueEmails(new Set(_emails));}else{props.showAlert(\"No Email Address found in the above text\",'info');}};var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=useState(new Set()),_useState4=_slicedToArray(_useState3,2),uniqueEmails=_useState4[0],setUniqueEmails=_useState4[1];var _useState5=useState(\"none\"),_useState6=_slicedToArray(_useState5,2),style1=_useState6[0],setStyle1=_useState6[1];return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",style:{color:props.mode==='light'?'black':'white'},children:[/*#__PURE__*/_jsx(\"h1\",{children:props.heading}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:/*#__PURE__*/_jsx(\"textarea\",{className:\"form-control\",style:{background:props.mode==='light'?'white':'#042743',color:props.mode==='light'?'black':'white'},value:text,onChange:onChangeText,id:\"textArea\",rows:\"10\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary my-2\",onClick:HanldetoUpper,children:\"Conver to Uppercase\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary mx-3 my-2\",onClick:HandletoLower,children:\"Conver to Lower Case\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary mx-3 my-2\",onClick:handleEmailExtractor,children:\"Extract Email Adress\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary mx-3 my-2\",onClick:handleClear,children:\"Clear Text Area\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"my-3\",children:\"Your Text Summary\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\" \",countWords(),\" Words and \",text.length,\" Charcters \"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\" \",0.008*text.split(' ').length,\" minutes read \"]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Text Preview\"}),/*#__PURE__*/_jsx(\"p\",{children:text.length>0?text:\"Enter text to preview\"}),/*#__PURE__*/_jsxs(\"div\",{id:\"emailAdressesContainer\",style:{display:style1},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Unique Email Addresses:\"}),/*#__PURE__*/_jsx(\"ul\",{children:Array.from(uniqueEmails).map(function(email,index){return/*#__PURE__*/_jsx(\"li\",{children:email.length>0?email:\"No Email Adress found in the above enterd text\"},index);})})]})]})});}","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TextForm","props","handleClear","setText","setUniqueEmails","setStyle1","HanldetoUpper","newText","text","toUpperCase","HandletoLower","toLowerCase","onChangeText","event","target","value","countWords","splitedTextLenght","split","length","endsWith","extractEmails","emailRegex","emails","match","handleEmailExtractor","document","getElementById","showAlert","Set","_useState","_useState2","_slicedToArray","_useState3","_useState4","uniqueEmails","_useState5","_useState6","style1","children","className","style","color","mode","heading","background","onChange","id","rows","onClick","display","Array","from","map","email","index"],"sources":["C:/FullStackWebDevelopment/textutils/src/components/TextForm.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleClear = () => {\r\n        setText(\"\")\r\n        setUniqueEmails(\"\")\r\n        setStyle1('none')\r\n    }\r\n    const HanldetoUpper = () => {\r\n        let newText = text.toUpperCase()\r\n        setText(newText)\r\n        setStyle1('none')\r\n    }\r\n    const HandletoLower = () => {\r\n        let newText = text.toLowerCase()\r\n        setText(newText)\r\n        setStyle1('none')\r\n    }\r\n    const onChangeText = (event) => {\r\n        setText(event.target.value)\r\n        setStyle1('none')\r\n    }\r\n\r\n    function countWords() {\r\n        let splitedTextLenght = text.split(' ').length\r\n        if (text.endsWith(' ')) {\r\n            return splitedTextLenght = splitedTextLenght - 1\r\n\r\n        } else {\r\n            return text.split(' ').length\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const extractEmails = (text) => {\r\n        const emailRegex = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/g\r\n        const emails = text.match(emailRegex) || []\r\n        return emails\r\n    }\r\n\r\n\r\n    const handleEmailExtractor = () => {\r\n        const emails = extractEmails(text);\r\n        if (document.getElementById('textArea').value === '') {\r\n            props.showAlert(\"Please enter some text in the Text Area.\", 'info')\r\n        } else if (emails.length > 0) {\r\n            setStyle1('inline')\r\n            const emails = extractEmails(text);\r\n            setUniqueEmails(new Set(emails));\r\n        } else {\r\n            props.showAlert(\"No Email Address found in the above text\", 'info')\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    const [text, setText] = useState(\"\");\r\n    const [uniqueEmails, setUniqueEmails] = useState(new Set());\r\n    const [style1, setStyle1] = useState(\"none\");\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='container' style={{ color: props.mode === 'light' ? 'black' : 'white' }}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" style={{ background: props.mode === 'light' ? 'white' : '#042743', color: props.mode === 'light' ? 'black' : 'white' }} value={text} onChange={onChangeText} id=\"textArea\" rows=\"10\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary my-2\" onClick={HanldetoUpper}>Conver to Uppercase</button>\r\n                <button className=\"btn btn-primary mx-3 my-2\" onClick={HandletoLower}>Conver to Lower Case</button>\r\n                <button className=\"btn btn-primary mx-3 my-2\" onClick={handleEmailExtractor}>Extract Email Adress</button>\r\n                <button className=\"btn btn-primary mx-3 my-2\" onClick={handleClear}>Clear Text Area</button>\r\n\r\n                <h2 className='my-3'>Your Text Summary</h2>\r\n                <p> {countWords()} Words and {text.length} Charcters </p>\r\n                <p> {0.008 * text.split(' ').length} minutes read </p>\r\n\r\n                <h2>Text Preview</h2>\r\n                <p>{text.length > 0 ? text : \"Enter text to preview\"}</p>\r\n\r\n                <div id='emailAdressesContainer' style={{ display: style1 }} >\r\n                    <h2>Unique Email Addresses:</h2>\r\n                    <ul>\r\n                        {Array.from(uniqueEmails).map((email, index) => (\r\n                            <li key={index}>{email.length > 0 ? email : \"No Email Adress found in the above enterd text\"}</li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}