{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStackWebDevelopment\\\\textutils\\\\src\\\\components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const handleClear = () => {\n    const textArea = document.getElementById('textArea');\n    textArea.value = setText('');\n    let emailAdress = document.getElementById('emailAdress');\n    emailAdress;\n  };\n  const HanldetoUpper = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n  const HandletoLower = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n  };\n  const onChangeText = event => {\n    setText(event.target.value);\n  };\n  function countWords() {\n    let splitedTextLenght = text.split(' ').length;\n    if (text.endsWith(' ')) {\n      return splitedTextLenght = splitedTextLenght - 1;\n    } else {\n      return text.split(' ').length;\n    }\n  }\n  const extractEmails = text => {\n    const emailRegex = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/g;\n    const emails = text.match(emailRegex) || [];\n    return emails;\n  };\n  const handleEmailExtractor = () => {\n    const emails = extractEmails(text);\n    setUniqueEmails(new Set(emails));\n  };\n  const [text, setText] = useState(\"\");\n  const [uniqueEmails, setUniqueEmails] = useState(new Set());\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        color: props.mode === 'light' ? 'black' : 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          style: {\n            background: props.mode === 'light' ? 'white' : '#04324a',\n            color: props.mode === 'light' ? 'black' : 'white'\n          },\n          value: text,\n          onChange: onChangeText,\n          id: \"textArea\",\n          rows: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: HanldetoUpper,\n        children: \"Conver to Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-3\",\n        onClick: HandletoLower,\n        children: \"Conver to Lower Case\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-3\",\n        onClick: handleClear,\n        children: \"Clear Text Area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-3\",\n        onClick: handleEmailExtractor,\n        children: \"Extract Email Adress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Text Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", countWords(), \" Words and \", text.length, \" Charcters \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", 0.008 * text.split(' ').length, \" minutes read \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Text Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Unique Email Addresses:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"emailAdress\",\n        children: Array.from(uniqueEmails).map((email, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: email\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(TextForm, \"ckW6hnorZz8uTAI/7gMVwWVb/FM=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","handleClear","textArea","document","getElementById","value","setText","emailAdress","HanldetoUpper","newText","text","toUpperCase","HandletoLower","toLowerCase","onChangeText","event","target","countWords","splitedTextLenght","split","length","endsWith","extractEmails","emailRegex","emails","match","handleEmailExtractor","setUniqueEmails","Set","uniqueEmails","children","className","style","color","mode","heading","fileName","_jsxFileName","lineNumber","columnNumber","background","onChange","id","rows","onClick","Array","from","map","email","index","_c","$RefreshReg$"],"sources":["C:/FullStackWebDevelopment/textutils/src/components/TextForm.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleClear = () => {\r\n        const textArea = document.getElementById('textArea')\r\n        textArea.value = setText('')\r\n        let emailAdress = document.getElementById('emailAdress')\r\n        emailAdress\r\n    }\r\n    const HanldetoUpper = () => {\r\n        let newText = text.toUpperCase()\r\n        setText(newText)\r\n    }\r\n    const HandletoLower = () => {\r\n        let newText = text.toLowerCase()\r\n        setText(newText)\r\n    }\r\n    const onChangeText = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n\r\n    function countWords() {\r\n        let splitedTextLenght = text.split(' ').length\r\n        if (text.endsWith(' ')) {\r\n            return splitedTextLenght = splitedTextLenght - 1\r\n\r\n        } else {\r\n            return text.split(' ').length\r\n        }\r\n    }\r\n\r\n    const extractEmails = (text) => {\r\n        const emailRegex = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/g\r\n        const emails = text.match(emailRegex) || []\r\n        return emails\r\n    }\r\n\r\n    const handleEmailExtractor = () => {\r\n        const emails = extractEmails(text);\r\n        setUniqueEmails(new Set(emails));\r\n    };\r\n\r\n\r\n    const [text, setText] = useState(\"\");\r\n    const [uniqueEmails, setUniqueEmails] = useState(new Set());\r\n    return (\r\n        <>\r\n            <div className='container' style={{ color: props.mode === 'light' ? 'black' : 'white' }}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" style={{ background: props.mode === 'light' ? 'white' : '#04324a', color: props.mode === 'light' ? 'black' : 'white' }} value={text} onChange={onChangeText} id=\"textArea\" rows=\"10\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary\" onClick={HanldetoUpper}>Conver to Uppercase</button>\r\n                <button className=\"btn btn-primary mx-3\" onClick={HandletoLower}>Conver to Lower Case</button>\r\n                <button className=\"btn btn-primary mx-3\" onClick={handleClear}>Clear Text Area</button>\r\n                <button className=\"btn btn-primary mx-3\" onClick={handleEmailExtractor}>Extract Email Adress</button>\r\n\r\n                <h2>Your Text Summary</h2>\r\n                <p> {countWords()} Words and {text.length} Charcters </p>\r\n                <p> {0.008 * text.split(' ').length} minutes read </p>\r\n\r\n                <h2>Text Preview</h2>\r\n                <p>{text}</p>\r\n\r\n                <h2>Unique Email Addresses:</h2>\r\n                <ul id='emailAdress'>\r\n                    {Array.from(uniqueEmails).map((email, index) => (\r\n                        <li key={index}>{email}</li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}