{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStackWebDevelopment\\\\textutils\\\\src\\\\components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const handleClear = () => {\n    setText(\"\");\n    setUniqueEmails(\"\");\n  };\n  const HanldetoUpper = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n  const HandletoLower = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n  };\n  const onChangeText = event => {\n    setText(event.target.value);\n  };\n  function countWords() {\n    let splitedTextLenght = text.split(' ').length;\n    if (text.endsWith(' ')) {\n      return splitedTextLenght = splitedTextLenght - 1;\n    } else {\n      return text.split(' ').length;\n    }\n  }\n  function uniqueEmailsCheck() {\n    if (Array.from(uniqueEmails).length > 0) {\n      console.log(\"email hain\");\n    } else {\n      console.log(\"email nhe hain\");\n    }\n  }\n  const extractEmails = text => {\n    const emailRegex = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/g;\n    const emails = text.match(emailRegex) || [];\n    return emails;\n  };\n  const handleEmailExtractor = () => {\n    if (document.getElementById('textArea').value === '') {}\n    const emails = extractEmails(text);\n    setUniqueEmails(new Set(emails));\n    uniqueEmailsCheck();\n  };\n  const [text, setText] = useState(\"\");\n  const [uniqueEmails, setUniqueEmails] = useState(new Set());\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        color: props.mode === 'light' ? 'black' : 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          style: {\n            background: props.mode === 'light' ? 'white' : '#042743',\n            color: props.mode === 'light' ? 'black' : 'white'\n          },\n          value: text,\n          onChange: onChangeText,\n          id: \"textArea\",\n          rows: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: HanldetoUpper,\n        children: \"Conver to Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-3\",\n        onClick: HandletoLower,\n        children: \"Conver to Lower Case\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-3\",\n        onClick: handleEmailExtractor,\n        children: \"Extract Email Adress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-3\",\n        onClick: handleClear,\n        children: \"Clear Text Area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Text Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", countWords(), \" Words and \", text.length, \" Charcters \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", 0.008 * text.split(' ').length, \" minutes read \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Text Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text.length > 0 ? text : \"Enter text to preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"emailAdressesContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Unique Email Addresses:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Array.from(uniqueEmails).map((email, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: email.length > 0 ? email : \"No Email Adress found in the above enterd text\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(TextForm, \"ckW6hnorZz8uTAI/7gMVwWVb/FM=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","handleClear","setText","setUniqueEmails","HanldetoUpper","newText","text","toUpperCase","HandletoLower","toLowerCase","onChangeText","event","target","value","countWords","splitedTextLenght","split","length","endsWith","uniqueEmailsCheck","Array","from","uniqueEmails","console","log","extractEmails","emailRegex","emails","match","handleEmailExtractor","document","getElementById","Set","children","className","style","color","mode","heading","fileName","_jsxFileName","lineNumber","columnNumber","background","onChange","id","rows","onClick","map","email","index","_c","$RefreshReg$"],"sources":["C:/FullStackWebDevelopment/textutils/src/components/TextForm.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleClear = () => {\r\n        setText(\"\")\r\n        setUniqueEmails(\"\")\r\n    }\r\n    const HanldetoUpper = () => {\r\n        let newText = text.toUpperCase()\r\n        setText(newText)\r\n    }\r\n    const HandletoLower = () => {\r\n        let newText = text.toLowerCase()\r\n        setText(newText)\r\n    }\r\n    const onChangeText = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n\r\n    function countWords() {\r\n        let splitedTextLenght = text.split(' ').length\r\n        if (text.endsWith(' ')) {\r\n            return splitedTextLenght = splitedTextLenght - 1\r\n\r\n        } else {\r\n            return text.split(' ').length\r\n        }\r\n    }\r\n\r\n\r\n    function uniqueEmailsCheck(){\r\n        if(Array.from(uniqueEmails).length>0){\r\n            console.log(\"email hain\")\r\n        }else{\r\n            console.log(\"email nhe hain\")\r\n        }\r\n    }\r\n\r\n\r\n    const extractEmails = (text) => {\r\n        const emailRegex = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/g\r\n        const emails = text.match(emailRegex) || []\r\n        return emails\r\n    }\r\n\r\n    \r\n    const handleEmailExtractor = () => {\r\n        if (document.getElementById('textArea').value === ''){\r\n            \r\n        }\r\n        const emails = extractEmails(text);\r\n        setUniqueEmails(new Set(emails));\r\n        uniqueEmailsCheck()\r\n    };\r\n\r\n\r\n\r\n    const [text, setText] = useState(\"\");\r\n    const [uniqueEmails, setUniqueEmails] = useState(new Set());\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='container' style={{ color: props.mode === 'light' ? 'black' : 'white' }}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" style={{ background: props.mode === 'light' ? 'white' : '#042743', color: props.mode === 'light' ? 'black' : 'white' }} value={text} onChange={onChangeText} id=\"textArea\" rows=\"10\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary\" onClick={HanldetoUpper}>Conver to Uppercase</button>\r\n                <button className=\"btn btn-primary mx-3\" onClick={HandletoLower}>Conver to Lower Case</button>\r\n                <button className=\"btn btn-primary mx-3\" onClick={handleEmailExtractor}>Extract Email Adress</button>\r\n                <button className=\"btn btn-primary mx-3\" onClick={handleClear}>Clear Text Area</button>\r\n\r\n                <h2>Your Text Summary</h2>\r\n                <p> {countWords()} Words and {text.length} Charcters </p>\r\n                <p> {0.008 * text.split(' ').length} minutes read </p>\r\n\r\n                <h2>Text Preview</h2>\r\n                <p>{text.length > 0 ? text : \"Enter text to preview\"}</p>\r\n\r\n                <div id='emailAdressesContainer' >\r\n                    <h2>Unique Email Addresses:</h2>\r\n                    <ul>\r\n                        {Array.from(uniqueEmails).map((email, index) => (\r\n                            <li key={index}>{email.length > 0 ? email : \"No Email Adress found in the above enterd text\"}</li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}