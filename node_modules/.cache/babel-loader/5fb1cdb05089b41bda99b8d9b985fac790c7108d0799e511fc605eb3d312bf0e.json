{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStackWebDevelopment\\\\textutils\\\\src\\\\components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ToggleVisiblity from './ToggleVisiblity';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const handleClear = () => {\n    setText(\"\");\n    setUniqueEmails(\"\");\n  };\n  const HanldetoUpper = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n  const HandletoLower = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n  };\n  const onChangeText = event => {\n    setText(event.target.value);\n  };\n  function countWords() {\n    let splitedTextLenght = text.split(' ').length;\n    if (text.endsWith(' ')) {\n      return splitedTextLenght = splitedTextLenght - 1;\n    } else {\n      return text.split(' ').length;\n    }\n  }\n  const extractEmails = text => {\n    props.tog;\n    const emailRegex = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/g;\n    const emails = text.match(emailRegex) || [];\n    return emails;\n  };\n  const handleEmailExtractor = () => {\n    const emails = extractEmails(text);\n    setUniqueEmails(new Set(emails));\n  };\n  const [text, setText] = useState(\"\");\n  const [uniqueEmails, setUniqueEmails] = useState(new Set());\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        color: props.mode === 'light' ? 'black' : 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          style: {\n            background: props.mode === 'light' ? 'white' : '#04324a',\n            color: props.mode === 'light' ? 'black' : 'white'\n          },\n          value: text,\n          onChange: onChangeText,\n          id: \"textArea\",\n          rows: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: HanldetoUpper,\n        children: \"Conver to Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-3\",\n        onClick: HandletoLower,\n        children: \"Conver to Lower Case\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-3\",\n        onClick: handleEmailExtractor,\n        children: \"Extract Email Adress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-3\",\n        onClick: handleClear,\n        children: \"Clear Text Area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Text Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", countWords(), \" Words and \", text.length, \" Charcters \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", 0.008 * text.split(' ').length, \" minutes read \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Text Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text.length > 0 ? text : \"Enter text to preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ToggleVisiblity, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"emailAdressesContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Unique Email Addresses:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Array.from(uniqueEmails).map((email, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: email.length > 0 ? email : \"No Email Adress found in the above enterd text\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(TextForm, \"ckW6hnorZz8uTAI/7gMVwWVb/FM=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","ToggleVisiblity","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","handleClear","setText","setUniqueEmails","HanldetoUpper","newText","text","toUpperCase","HandletoLower","toLowerCase","onChangeText","event","target","value","countWords","splitedTextLenght","split","length","endsWith","extractEmails","tog","emailRegex","emails","match","handleEmailExtractor","Set","uniqueEmails","children","className","style","color","mode","heading","fileName","_jsxFileName","lineNumber","columnNumber","background","onChange","id","rows","onClick","Array","from","map","email","index","_c","$RefreshReg$"],"sources":["C:/FullStackWebDevelopment/textutils/src/components/TextForm.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport ToggleVisiblity from './ToggleVisiblity'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleClear = () => {\r\n        setText(\"\")\r\n        setUniqueEmails(\"\")\r\n    }\r\n    const HanldetoUpper = () => {\r\n        let newText = text.toUpperCase()\r\n        setText(newText)\r\n    }\r\n    const HandletoLower = () => {\r\n        let newText = text.toLowerCase()\r\n        setText(newText)\r\n    }\r\n    const onChangeText = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n\r\n    function countWords() {\r\n        let splitedTextLenght = text.split(' ').length\r\n        if (text.endsWith(' ')) {\r\n            return splitedTextLenght = splitedTextLenght - 1\r\n\r\n        } else {\r\n            return text.split(' ').length\r\n        }\r\n    }\r\n\r\n    const extractEmails = (text) => {\r\n        props.tog\r\n        const emailRegex = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/g\r\n        const emails = text.match(emailRegex) || []\r\n        return emails\r\n    }\r\n\r\n    const handleEmailExtractor = () => {\r\n        const emails = extractEmails(text);\r\n        setUniqueEmails(new Set(emails));\r\n    };\r\n\r\n  \r\n\r\n    const [text, setText] = useState(\"\");\r\n    const [uniqueEmails, setUniqueEmails] = useState(new Set());\r\n    \r\n    return (\r\n        <>\r\n            <div className='container' style={{ color: props.mode === 'light' ? 'black' : 'white' }}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" style={{ background: props.mode === 'light' ? 'white' : '#04324a', color: props.mode === 'light' ? 'black' : 'white' }} value={text} onChange={onChangeText} id=\"textArea\" rows=\"10\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary\" onClick={HanldetoUpper}>Conver to Uppercase</button>\r\n                <button className=\"btn btn-primary mx-3\" onClick={HandletoLower}>Conver to Lower Case</button>\r\n                <button className=\"btn btn-primary mx-3\" onClick={handleEmailExtractor}>Extract Email Adress</button>\r\n                <button className=\"btn btn-primary mx-3\" onClick={handleClear}>Clear Text Area</button>\r\n\r\n                <h2>Your Text Summary</h2>\r\n                <p> {countWords()} Words and {text.length} Charcters </p>\r\n                <p> {0.008 * text.split(' ').length} minutes read </p>\r\n\r\n                <h2>Text Preview</h2>\r\n                <p>{text.length > 0 ? text : \"Enter text to preview\"}</p>\r\n\r\n                <ToggleVisiblity>\r\n                <div id='emailAdressesContainer' >\r\n                    <h2>Unique Email Addresses:</h2>\r\n                    <ul>\r\n                        {Array.from(uniqueEmails).map((email, index) => (\r\n                            <li key={index}>{email.length > 0 ? email : \"No Email Adress found in the above enterd text\"}</li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n\r\n\r\n                </ToggleVisiblity>\r\n\r\n\r\n                \r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}